{"singlePage": ["link", "about"], "startSite": "06/20/2024", "filingNum": "\u5180ICP\u59072022019998\u53f7", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "indexScript": "", "indexStyle": "", "bottomText": "\ud83c\udf7a\u8f6c\u8f7d\u6587\u7ae0\u8bf7\u6ce8\u660e\u51fa\u5904\uff0c\u8c22\u8c22\uff01\ud83c\udf7a", "showPostSource": 1, "iconList": {"music": "M16 13.25A1.75 1.75 0 0 1 14.25 15H1.75A1.75 1.75 0 0 1 0 13.25V2.75C0 1.784.784 1 1.75 1h12.5c.966 0 1.75.784 1.75 1.75ZM1.75 2.5a.25.25 0 0 0-.25.25v10.5c0 .138.112.25.25.25h.94l.03-.03 6.077-6.078a1.75 1.75 0 0 1 2.412-.06L14.5 10.31V2.75a.25.25 0 0 0-.25-.25Zm12.5 11a.25.25 0 0 0 .25-.25v-.917l-4.298-3.889a.25.25 0 0 0-.344.009L4.81 13.5ZM7 6a2 2 0 1 1-3.999.001A2 2 0 0 1 7 6ZM5.5 6a.5.5 0 1 0-1 0 .5.5 0 0 0 1 0Z"}, "UTC": 8, "rssSplit": "sentence", "exlink": {"music": "https://img.witter.top"}, "title": "V's Blog", "subTitle": "\u81ea\u6709\u6e05\u98ce\u5e38\u8f7d\u9e64\uff0c\u4ece\u65e0\u731c\u610f\u4e0d\u60ca\u9e25\u3002", "avatarUrl": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "GMEEK_VERSION": "last", "homeUrl": "https://blog.witter.top", "postListJson": {"P13": {"htmlDir": "docs/post/ni-jue-de-zhe-shi-shen-me-jiu-shi-shen-me.html", "labels": ["good first issue"], "postTitle": "\u4f60\u89c9\u5f97\u8fd9\u662f\u4ec0\u4e48\u5c31\u662f\u4ec0\u4e48", "postUrl": "post/ni-jue-de-zhe-shi-shen-me-jiu-shi-shen-me.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/13", "commentNum": 0, "wordCount": 105, "description": "[image](https://www.3mz.cloudns.ch/file/8859a6285fa21a73afc4c.jpg)\r\n<!-- ##{'timestamp':1705817030}## -->\u3002", "top": 0, "createdAt": 1705817030, "style": "", "script": "", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-01-21", "dateLabelColor": "#bc4c00"}, "P16": {"htmlDir": "docs/post/Python -xiao-ji.html", "labels": ["lang"], "postTitle": "Python \u5c0f\u8bb0", "postUrl": "post/Python%20-xiao-ji.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/16", "commentNum": 0, "wordCount": 24581, "description": "## 1.\u521d\u8bc6Python\r\n\r\n1989 \u5e74\uff0c\u4f5c\u8005\u51b3\u5fc3\u5f00\u53d1\u4e00\u4e2a\u65b0\u7684\u89e3\u91ca\u7a0b\u5e8f\r\n\r\n1991\u5e74\uff0c\u7b2c\u4e00\u4e2aPython\u89e3\u91ca\u5668\u8bde\u751f\r\n\r\n## 2.\u5b89\u88c5Python\r\n\r\n\u5b98\u7f51\u4e0b\u8f7d\uff1ahttps://www.python.org/downloads/\r\n\r\n- \u6dfb\u52a0\u5230path\r\n- \u4fee\u6539\u9ed8\u8ba4\u8def\u5f84\r\n\r\ncmd \u8f93\u5165python\r\n\r\n```shell\r\nC:\\Users\\Lenovo>python\r\nPython 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)] on win32\r\nType 'help', 'copyright', 'credits' or 'license' for more information.\r\n>>>\r\n```\r\n\r\n**Python\u89e3\u91ca\u5668**\uff1a\u7528\u6765\u7ffb\u8bd1Python\u4ee3\u7801\uff0c\u5e76\u63d0\u4ea4\u7ed9\u8ba1\u7b97\u673a\u6267\u884c\u3002", "top": 0, "createdAt": 1717068447, "style": "", "script": "", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-05-30", "dateLabelColor": "#bc4c00"}, "P1": {"htmlDir": "docs/post/V's first.html", "labels": ["bug"], "postTitle": "V's first", "postUrl": "post/V%27s%20first.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/1", "commentNum": 0, "wordCount": 13, "description": "> just a test\u3002", "top": 0, "createdAt": 1718849942, "style": "", "script": "", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P2": {"htmlDir": "docs/post/Certbot -shen-qing-SSL-zheng-shu.html", "labels": ["\u8bc1\u4e66"], "postTitle": "Certbot \u7533\u8bf7SSL\u8bc1\u4e66", "postUrl": "post/Certbot%20-shen-qing-SSL-zheng-shu.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/2", "commentNum": 0, "wordCount": 2083, "description": "## \u5b98\u65b9\u7f51\u5740\r\n\r\nhttps://certbot.eff.org/\r\n\r\n## \u7533\u8bf7SSL\u8bc1\u4e66\r\n\r\n> \u6307\u5b9aNginx\u8def\u5f84\u65b9\u6cd5\uff1a\r\n>\r\n> \u65b9\u5f0f1\uff1a certbot --nginx    (\u5f53linux\u6709\u591a\u4e2a\u7248\u672cnginx\uff0c\u4f1a\u51fa\u73b0\u627e\u9519nginx\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84)\r\n>\r\n> \u65b9\u5f0f2\uff1a certbot --nginx-server-root  /usr/local/nginx/conf    (\u6307\u5b9anginx\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84)\r\n\r\n1. \u4e3a\u5355\u57df\u540d\u7533\u8bf7SSL\u8bc1\u4e66\r\n\r\n   ```shell\r\n   # \u5b89\u88c5 certbot \u4ee5\u53ca certbot nginx \u63d2\u4ef6\r\n   sudo yum install certbot python2-certbot-nginx -y\r\n   \r\n   # \u6267\u884c\u914d\u7f6e\uff0c\u4e2d\u9014\u4f1a\u8be2\u95ee\u4f60\u7684\u90ae\u7bb1\uff0c\u5982\u5b9e\u586b\u5199\u5373\u53ef\r\n   sudo certbot --nginx\r\n   \r\n   # \u81ea\u52a8\u7eed\u7ea6\r\n   sudo certbot renew --dry-run\r\n   \r\n   # \u83b7\u5f97\u5e76\u5b89\u88c5\u4e00\u4e2a\u8bc1\u4e66\u3002", "top": 0, "createdAt": 1718851464, "style": "", "script": "", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P3": {"htmlDir": "docs/post/Azkaban.html", "labels": ["\u5927\u6570\u636e"], "postTitle": "Azkaban", "postUrl": "post/Azkaban.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/3", "commentNum": 0, "wordCount": 5553, "description": "## 1.\u90e8\u7f72\r\n\r\n### 1.1 Solo\r\n\r\n\u72ec\u7acb\u670d\u52a1\u5668\u662fAzkaban\u7684\u72ec\u7acb\u5b9e\u4f8b\uff0c\u4e5f\u662f\u6700\u7b80\u5355\u7684\u5f00\u59cb\u3002", "top": 0, "createdAt": 1718851638, "style": "", "script": "", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P4": {"htmlDir": "docs/post/EFK-ri-zhi-xi-tong.html", "labels": ["\u5bb9\u5668", "\u65e5\u5fd7"], "postTitle": "EFK\u65e5\u5fd7\u7cfb\u7edf", "postUrl": "post/EFK-ri-zhi-xi-tong.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/4", "commentNum": 0, "wordCount": 15021, "description": "\r\n**\u6ce8\uff1a\u73b0\u5728\u65b0\u7248\u672celastic stack\u5df2\u7ecf\u652f\u6301\u5c06kafka\u4f5c\u4e3a\u8f93\u51fa\u548c\u8f93\u5165\u7684\u76ee\u6807**\r\n\r\n\u5f53\u65e5\u5fd7\u4e0d\u662f\u7ed3\u6784\u5316\u6570\u636e\uff1a*.log->filebeat->kafka->logstash->elasticsearch\r\n\r\n\u5f53\u65e5\u5fd7\u662f\u7ed3\u6784\u5316\u6570\u636e\uff1a*.log->filebeat->kafka->filebeat->elasticsearch\r\n\r\n\u533a\u522b\u5728\u4e8e\u662f\u5426\u9700\u8981logstash\u8fdb\u884c\u65e5\u5fd7\u7684\u8fc7\u6ee4\u548c\u7ed3\u6784\u5316\uff1b\r\n\r\n## \u7ed3\u6784\u5316\u65e5\u5fd7\r\n\r\n**\u8fde\u63a5\u793a\u4f8b\u914d\u7f6e\u6587\u4ef6**\r\n\r\n### filebeat 1\r\n\r\n> \u6b64filebeat\u5b9e\u4f8b\u4e3a\u65e5\u5fd7\u91c7\u96c6\u7aef\uff0c\u5373kafka\u751f\u4ea7\u8005\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\u5b9e\u4f8b\u8fdb\u884c\u91c7\u96c6\r\n\r\n```yaml\r\nfilebeat.inputs:\r\n- type: filestream #\u65b0\u7248\u672c\u5e38\u7528\u6587\u4ef6\u6d41\u8f93\u5165\u65b9\u5f0f\r\n  id: my-filestream-id #\u6bcf\u4e2a\u6587\u4ef6\u6d41\u8f93\u5165\u5fc5\u987b\u6709\u4e00\u4e2a\u552f\u4e00\u7684 ID\u3002", "top": 0, "createdAt": 1718853988, "style": "", "script": "", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P5": {"htmlDir": "docs/post/CloudFlare-da-jian-Docker-jing-xiang-yuan.html", "labels": ["\u5bb9\u5668"], "postTitle": "CloudFlare\u642d\u5efaDocker\u955c\u50cf\u6e90", "postUrl": "post/CloudFlare-da-jian-Docker-jing-xiang-yuan.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/5", "commentNum": 0, "wordCount": 1923, "description": "> [\u793a\u4f8b\u7f51\u7ad9](https://docker.3mz.cloudns.ch/) \u4f7f\u7528\u7684 [\u6559\u7a0b](https://blog.lty520.faith/%E5%8D%9A%E6%96%87/%E8%87%AA%E5%BB%BAdocker-hub%E5%8A%A0%E9%80%9F%E9%95%9C%E5%83%8F) \u548c [\u4ed3\u5e93](https://github.com/Doublemine/container-registry-worker)\uff0c\u5bf9\u4ed3\u5e93\u4ee3\u7801\u8fdb\u884c\u4e86\u90e8\u5206\u81ea\u5b9a\u4e49\u4fee\u6539\r\n\r\n`docker.ts`\r\n\r\n```typescript\r\nimport HTML from './docker.html';\r\n\r\nexport default {\r\n  async fetch(request: Request): Promise<Response> {\r\n    const url = new URL(request.url);\r\n    const path = url.pathname;\r\n    const originalHost = request.headers.get('host');\r\n    const registryHost = 'registry-1.docker.io';\r\n\r\n    if (path.startsWith('/v2/')) {\r\n      const headers = new Headers(request.headers);\r\n      headers.set('host', registryHost);\r\n\r\n      const registryUrl = `https://${registryHost}${path}`;\r\n      const registryRequest = new Request(registryUrl, {\r\n        method: request.method,\r\n        headers: headers,\r\n        body: request.body,\r\n        redirect: 'follow', // \u6309\u7167\u6559\u7a0b\u4fee\u6539\u4e86\u8fd9\u4e00\u884c\r\n      });\r\n\r\n      const registryResponse = await fetch(registryRequest);\r\n\r\n      const responseHeaders = new Headers(registryResponse.headers);\r\n      responseHeaders.set('access-control-allow-origin', originalHost as string);\r\n      responseHeaders.set('access-control-allow-headers', 'Authorization');\r\n      return new Response(registryResponse.body, {\r\n        status: registryResponse.status,\r\n        statusText: registryResponse.statusText,\r\n        headers: responseHeaders,\r\n      });\r\n    } else {\r\n      return new Response(HTML.replace(/{{host}}/g, originalHost as string), {\r\n        status: 200,\r\n        headers: {\r\n          'content-type': 'text/html'\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n## \u5982\u4f55\u90e8\u7f72\r\n\r\n```shell\r\n# \u4f7f\u7528wrangler\r\nwrangler publish --config wrangler-dockerhub.toml\r\n```\r\n\r\n## \u5982\u4f55\u81ea\u5b9a\u4e49\u57df\u540d\r\n\r\n\u8bbf\u95eeCloudFlare\u540e\u53f0 -> Workers\u548cPages -> \u8fdb\u5165\u9700\u8981\u81ea\u5b9a\u4e49\u7684Worker -> \u8bbe\u7f6e -> \u89e6\u53d1\u5668 -> \u81ea\u5b9a\u4e49\u57df\r\n\r\n![image-20240620140432250](https://img.witter.top/file/519f26de32e9f4b53cc3b.png)\u3002", "top": 1, "createdAt": 1718863528, "style": "", "script": "", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P6": {"htmlDir": "docs/post/Hadoop.html", "labels": ["\u5927\u6570\u636e"], "postTitle": "Hadoop", "postUrl": "post/Hadoop.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/6", "commentNum": 0, "wordCount": 13939, "description": "\r\n## 1.Hadoop\u6982\u8ff0\r\n\r\n**\u6838\u5fc3\u7ec4\u4ef6**\r\n\r\n**HDFS**\uff08\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\uff09\uff1a\u89e3\u51b3\u6d77\u91cf\u6570\u636e\u5b58\u50a8\r\n\r\n**YARN**\uff08\u4f5c\u4e1a\u8c03\u5ea6\u548c\u96c6\u7fa4\u8d44\u6e90\u7ba1\u7406\u7684\u6846\u67b6\uff09\uff1a\u89e3\u51b3\u8d44\u6e90\u4efb\u52a1\u8c03\u5ea6\r\n\r\n**MAPREDUCE**\uff08\u5206\u5e03\u5f0f\u8fd0\u7b97\u7f16\u7a0b\u6846\u67b6\uff09\uff1a\u89e3\u51b3\u6d77\u91cf\u6570\u636e\u8ba1\u7b97\r\n\r\n**\u5176\u4ed6\u6846\u67b6**\r\n\r\n| **\u6846\u67b6**  | **\u7528\u9014**                                                  |\r\n| --------- | --------------------------------------------------------- |\r\n| HDFS      | \u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf                                            |\r\n| MapReduce | \u5206\u5e03\u5f0f\u8fd0\u7b97\u7a0b\u5e8f\u5f00\u53d1\u6846\u67b6                                    |\r\n| ZooKeeper | \u5206\u5e03\u5f0f\u534f\u8c03\u670d\u52a1\u57fa\u7840\u7ec4\u4ef6                                    |\r\n| HIVE      | \u57fa\u4e8eHADOOP\u7684\u5206\u5e03\u5f0f\u6570\u636e\u4ed3\u5e93\uff0c\u63d0\u4f9b\u57fa\u4e8eSQL\u7684\u67e5\u8be2\u6570\u636e\u64cd\u4f5c     |\r\n| FLUME     | \u65e5\u5fd7\u6570\u636e\u91c7\u96c6\u6846\u67b6                                          |\r\n| oozie     | \u5de5\u4f5c\u6d41\u8c03\u5ea6\u6846\u67b6                                            |\r\n| Sqoop     | \u6570\u636e\u5bfc\u5165\u5bfc\u51fa\u5de5\u5177\uff08\u6bd4\u5982\u7528\u4e8emysql\u548cHDFS\u4e4b\u95f4\uff09               |\r\n| Impala    | \u57fa\u4e8ehive\u7684\u5b9e\u65f6sql\u67e5\u8be2\u5206\u6790                                 |\r\n| Mahout    | \u57fa\u4e8emapreduce/spark/flink\u7b49\u5206\u5e03\u5f0f\u8fd0\u7b97\u6846\u67b6\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5e93 |\r\n\r\n**\u9ed8\u8ba4\u7aef\u53e3\u66f4\u6539**\r\n\r\n1. \u5728hadoop3.x\u4e4b\u524d\uff0c\u591a\u4e2aHadoop\u670d\u52a1\u7684\u9ed8\u8ba4\u7aef\u53e3\u90fd\u5c5e\u4e8eLinux\u7684\u4e34\u65f6\u7aef\u53e3\u8303\u56f4\uff0832768-61000\uff09\u3002", "top": 0, "createdAt": 1718890527, "style": "", "script": "", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P7": {"htmlDir": "docs/post/Helm -an-zhuang.html", "labels": ["K8S", "\u5bb9\u5668"], "postTitle": "Helm \u5b89\u88c5", "postUrl": "post/Helm%20-an-zhuang.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/7", "commentNum": 0, "wordCount": 3136, "description": "[\u5b98\u65b9\u6587\u6863](https://helm.sh/zh/docs/intro/install/)\r\n\r\n### \u7528\u4e8c\u8fdb\u5236\u7248\u672c\u5b89\u88c5\r\n\r\n\u6bcf\u4e2aHelm [[\u7248\u672c](https://github.com/helm/helm/releases)](https://github.com/helm/helm/releases)\u90fd\u63d0\u4f9b\u4e86\u5404\u79cd\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e8c\u8fdb\u5236\u7248\u672c\uff0c\u8fd9\u4e9b\u7248\u672c\u53ef\u4ee5\u624b\u52a8\u4e0b\u8f7d\u548c\u5b89\u88c5\u3002", "top": 0, "createdAt": 1718890596, "style": "", "script": "", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P8": {"htmlDir": "docs/post/Linux -gong-ju.html", "labels": ["Linux"], "postTitle": "Linux \u5de5\u5177", "postUrl": "post/Linux%20-gong-ju.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/8", "commentNum": 0, "wordCount": 7329, "description": "# Linux\u5de5\u5177\r\n\r\n## psmisc\r\n\r\npsmisc \u662f\u4e00\u4e2a Linux \u5de5\u5177\u96c6\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7ba1\u7406\u548c\u76d1\u89c6\u8fdb\u7a0b\u7684\u5b9e\u7528\u5de5\u5177\u3002", "top": 0, "createdAt": 1718891479, "style": "", "script": "", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P9": {"htmlDir": "docs/post/Kubernetes.html", "labels": ["Linux", "K8S"], "postTitle": "Kubernetes", "postUrl": "post/Kubernetes.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/9", "commentNum": 0, "wordCount": 30953, "description": "## \u5b89\u88c5\r\n\r\n### \u8f6c\u53d1 IPv4 \u5e76\u8ba9 iptables \u770b\u5230\u6865\u63a5\u6d41\u91cf\r\n\r\n```shell\r\ncat <<EOF | sudo tee /etc/modules-load.d/k8s.conf\r\noverlay\r\nbr_netfilter\r\nEOF\r\n\r\nsudo modprobe overlay\r\nsudo modprobe br_netfilter\r\n\r\n# \u8bbe\u7f6e\u6240\u9700\u7684 sysctl \u53c2\u6570\uff0c\u53c2\u6570\u5728\u91cd\u65b0\u542f\u52a8\u540e\u4fdd\u6301\u4e0d\u53d8\r\ncat <<EOF | sudo tee /etc/sysctl.d/k8s.conf\r\nnet.bridge.bridge-nf-call-iptables  = 1\r\nnet.bridge.bridge-nf-call-ip6tables = 1\r\nnet.ipv4.ip_forward                 = 1\r\nEOF\r\n\r\n# \u5e94\u7528 sysctl \u53c2\u6570\u800c\u4e0d\u91cd\u65b0\u542f\u52a8\r\nsudo sysctl --system\r\n```\r\n\r\n\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u6307\u4ee4\u786e\u8ba4 `br_netfilter` \u548c `overlay` \u6a21\u5757\u88ab\u52a0\u8f7d\uff1a\r\n\r\n```bash\r\nlsmod | grep br_netfilter\r\nlsmod | grep overlay\r\n```\r\n\r\n\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u6307\u4ee4\u786e\u8ba4 `net.bridge.bridge-nf-call-iptables`\u3001`net.bridge.bridge-nf-call-ip6tables` \u548c `net.ipv4.ip_forward` \u7cfb\u7edf\u53d8\u91cf\u5728\u4f60\u7684 `sysctl` \u914d\u7f6e\u4e2d\u88ab\u8bbe\u7f6e\u4e3a 1\uff1a\r\n\r\n```bash\r\nsysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward\r\n```\r\n\r\n### \u4e34\u65f6\u5173\u95edswap\u5206\u533a\r\n\r\n```shell\r\nsudo swapoff -a\r\n# Debian\u6c38\u4e45\u5173\u95ed\r\nsystemctl --type swap --all\r\nsystemctl mask dev-xxx.swap\r\n```\r\n\r\n### \u914d\u7f6ecgroup\u9a71\u52a8\r\n\r\n```shell\r\n# \u5907\u4efd/etc/containerd/config.toml\r\ncontainerd config default > /etc/containerd/config.toml\r\n\r\nSystemdCgroup = true\r\n\r\n[plugins.'io.containerd.grpc.v1.cri']\r\n  sandbox_image = 'registry.aliyuncs.com/google_containers/pause:3.6'\r\n```\r\n\r\n### \u5b89\u88c5 kubeadm\u3001kubelet \u548c kubectl\r\n\r\n```shell\r\n# \u57fa\u4e8eRed Hat\u7684\u53d1\u884c\u7248\r\n# \u5c06 SELinux \u8bbe\u7f6e\u4e3a permissive \u6a21\u5f0f\uff08\u76f8\u5f53\u4e8e\u5c06\u5176\u7981\u7528\uff09\r\nsudo setenforce 0\r\nsudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config\r\n\r\n# \u6b64\u64cd\u4f5c\u4f1a\u8986\u76d6 /etc/yum.repos.d/kubernetes.repo \u4e2d\u73b0\u5b58\u7684\u6240\u6709\u914d\u7f6e\r\ncat > /etc/yum.repos.d/kubernetes.repo << EOF\r\n[kubernetes]\r\nname=Kubernetes\r\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\r\nenabled=1\r\ngpgcheck=0\r\nrepo_gpgcheck=0\r\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\r\nEOF\r\n\r\nsudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes\r\nsudo systemctl enable --now kubelet\r\n\r\n# \u57fa\u4e8eDebian\u7684\u53d1\u884c\u7248\r\nsudo apt-get update\r\n# apt-transport-https \u53ef\u80fd\u662f\u4e00\u4e2a\u865a\u62df\u5305\uff08dummy package\uff09\uff1b\u5982\u679c\u662f\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u8df3\u8fc7\u5b89\u88c5\u8fd9\u4e2a\u5305\r\nsudo apt-get install -y apt-transport-https ca-certificates curl\r\n\r\ncurl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg\r\n\r\necho 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list\r\n\r\nsudo apt-get update\r\nsudo apt-get install -y kubelet kubeadm kubectl\r\nsudo apt-mark hold kubelet kubeadm kubectl\r\n```\r\n\r\n### \u6dfb\u52a0\u6307\u4ee4\u8865\u5168\r\n\r\n```shell\r\nsudo apt-get install bash-completion\r\necho 'source <(kubectl completion bash)' >> ~/.bashrc\r\nsource ~/.bashrc\r\ncat ~/.bashrc\r\n```\r\n\r\n\r\n\r\n### \u521d\u59cb\u5316Master\u8282\u70b9\r\n\r\n\u63a7\u5236\u5e73\u9762\u8282\u70b9\u662f\u8fd0\u884c\u63a7\u5236\u5e73\u9762\u7ec4\u4ef6\u7684\u673a\u5668\uff0c \u5305\u62ec etcd\uff08\u96c6\u7fa4\u6570\u636e\u5e93\uff09 \u548c API \u670d\u52a1\u5668 \uff08\u547d\u4ee4\u884c\u5de5\u5177 kubectl \u4e0e\u4e4b\u901a\u4fe1\uff09\u3002", "top": 0, "createdAt": 1718893152, "style": "", "script": "", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P10": {"htmlDir": "docs/post/Logrotate.html", "labels": ["Linux"], "postTitle": "Logrotate", "postUrl": "post/Logrotate.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/10", "commentNum": 0, "wordCount": 9129, "description": "logrotate \u662f\u4e00\u4e2a linux \u7cfb\u7edf\u65e5\u5fd7\u7684\u7ba1\u7406\u5de5\u5177\u3002", "top": 0, "createdAt": 1718893645, "style": "", "script": "", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P11": {"htmlDir": "docs/post/Openssl -sheng-ji.html", "labels": ["Linux"], "postTitle": "Openssl \u5347\u7ea7", "postUrl": "post/Openssl%20-sheng-ji.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/11", "commentNum": 0, "wordCount": 1865, "description": "## \u5347\u7ea7\u652f\u6301TLS 1.3\r\n\r\n```shell\r\n# \u4e0b\u8f7d\r\nwget https://www.openssl.org/source/openssl-3.0.13.tar.gz\r\n# \u89e3\u538b\r\ntar -zxvf openssl-3.0.13.tar.gz\r\n# \u914d\u7f6e\u3001\u7f16\u8bd1\r\n./config  --prefix=/usr/local/openssl\r\nmake\r\n# \u68c0\u67e5\u662f\u5426\u51fa\u9519\r\nmake test\r\n# \u5b89\u88c5\r\nmake install\r\n```\r\n\r\n\u5b89\u88c5\u5b8c\u6210\u540e\u68c0\u67e5\u94fe\u63a5\u5e93\u662f\u5426\u6b63\u5e38\uff0c\u5c06\u7f3a\u5c11\u7684\u6587\u4ef6\u76f4\u63a5\u8f6f\u94fe\u63a5\u5230\u7cfb\u7edf\u7684`/usr/lib64`\u76ee\u5f55\u4e0b\r\n\r\n```shell\r\ncd /usr/local/openssl/bin\r\nldd openssl\r\n\r\nlinux-vdso.so.1 =>  (0x00007ffe3893b000)\r\nlibssl.so.3 => not found\r\nlibcrypto.so.3 => not found\r\nlibdl.so.2 => /lib64/libdl.so.2 (0x00007ff49e5e0000)\r\nlibpthread.so.0 => /lib64/libpthread.so.0 (0x00007ff49e3c4000)\r\nlibc.so.6 => /lib64/libc.so.6 (0x00007ff49dff6000)\r\n/lib64/ld-linux-x86-64.so.2 (0x00007ff49e7e4000)\r\n\r\nln -s /usr/local/openssl/lib64/libssl.so.3 /usr/lib64/libssl.so.3\r\nln -s /usr/local/openssl/lib64/libcrypto.so.3 /usr/lib64/libcrypto.so.3\r\n\r\nlinux-vdso.so.1 =>  (0x00007fffd2ddb000)\r\nlibssl.so.3 => /lib64/libssl.so.3 (0x00007fbc48fc8000)\r\nlibcrypto.so.3 => /lib64/libcrypto.so.3 (0x00007fbc48954000)\r\nlibdl.so.2 => /lib64/libdl.so.2 (0x00007fbc48750000)\r\nlibpthread.so.0 => /lib64/libpthread.so.0 (0x00007fbc48534000)\r\nlibc.so.6 => /lib64/libc.so.6 (0x00007fbc48166000)\r\n/lib64/ld-linux-x86-64.so.2 (0x00007fbc4926d000)\r\n```\r\n\r\n\u62a5\u9519\uff1a\r\n\r\n```shell\r\nCan't locate IPC/Cmd.pm in @INC (@INC contains: /home/sonkwo/openssl-3.0.13/util/perl /usr/local/lib64/perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5 . /home/sonkwo/openssl-3.0.13/external/perl/Text-Template-1.56/lib) at /home/sonkwo/openssl-3.0.13/util/perl/OpenSSL/config.pm line 19.\r\nBEGIN failed--compilation aborted at /home/sonkwo/openssl-3.0.13/util/perl/OpenSSL/config.pm line 19.\r\nCompilation failed in require at /home/sonkwo/openssl-3.0.13/Configure line 23.\r\nBEGIN failed--compilation aborted at /home/sonkwo/openssl-3.0.13/Configure line 23.\r\n\r\nyum install perl-IPC-Cmd\r\n```\r\n\r\n\u3002", "top": 0, "createdAt": 1718893740, "style": "", "script": "", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P15": {"htmlDir": "docs/post/Jenkins-Kubernetes-xiang-jie-he.html", "labels": ["CI/CD"], "postTitle": "Jenkins-Kubernetes\u76f8\u7ed3\u5408", "postUrl": "post/Jenkins-Kubernetes-xiang-jie-he.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/15", "commentNum": 0, "wordCount": 6520, "description": "\r\n## 1.\u5b89\u88c5/\u90e8\u7f72\r\n\r\n### 1.1 docker compose\r\n\r\n`docker-compose.yml`\r\n\r\n```yaml\r\nservices:                                     \r\n  jenkins:\r\n    restart: always                            \r\n    image: jenkins/jenkins:2.414.3  \r\n    #image: jenkins/jenkins:2.387.2 \r\n    container_name: jenkins\r\n    network_mode: host\r\n    ports:                                     \r\n      - 18080:8080                              \r\n      - 28888:28888\r\n    volumes:\r\n      - ./:/var/jenkins_home  \r\n      - /usr/bin/docker:/usr/bin/docker               \r\n      - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose\r\n      - /var/run/docker.sock:/var/run/docker.sock\r\n    environment:\r\n      - TZ=Asia/Shanghai\r\n      - JENKINS_SLAVE_AGENT_PORT=28888\r\n```\r\n\r\n## 2.Pipeline(\u6d41\u6c34\u7ebf\u4efb\u52a1)\r\n\r\n### 2.1 Jenkinsfile\u6982\u89c8\r\n\r\n*\u6d4b\u8bd5\u73af\u5883\u5c06\u670d\u52a1\u90e8\u7f72\u5230k8s\u4e2d\u7684Jenkinsfile\uff0c\u5305\u62ec\u4e86\u9879\u76ee\u4ee3\u7801\u62c9\u53d6\u3001\u914d\u7f6e\u6587\u4ef6\u62c9\u53d6\u3001\u9879\u76ee\u7f16\u8bd1\u3001docker\u955c\u50cf\u6784\u5efa/\u4e0a\u4f20\u3001\u591aagent-workspace\u64cd\u4f5c\u3001Pod\u9996\u6b21\u53d1\u5e03\u548c\u6eda\u52a8\u66f4\u65b0\u68c0\u6d4b*\r\n\r\n```groovy\r\npipeline {\r\n    agent {\r\n        label 'node_X'\r\n    }\r\n    tools {\r\n        jdk 'jdk11'\r\n    }\r\n    environment {\r\n        //\u4e00\u822c\u53ea\u9700\u8981\u4fee\u6539\u8fd9\u91cc\u51e0\u4e2a\r\n        CONTAINER_NAME = 'xxx'\t//\u5bb9\u5668tag\r\n        YAML_NAME = 'xxx-deploy.yml'\t//yml\u6587\u4ef6\u540d\r\n        PUB_ENV = 'test'\t//\u53d1\u5e03\u73af\u5883\uff0c\u5bf9\u5e94\u4ee5\u540e\u8fdb\u884c\u7248\u672c\u63a7\u5236\u7684\u76ee\u5f55\u4f4d\u7f6e\r\n        K8S_NAMESPACE = 'test-xxx'\r\n        PROJECT_GIT_URL = ''       //\u9879\u76ee\u4ee3\u7801\u5730\u5740\r\n        CONFIG_GIT_URL = ''        //\u914d\u7f6e\u6587\u4ef6\u5730\u5740(\u5f53\u9879\u76eeJenkinsfile\u548c\u9879\u76ee\u4e0d\u5728\u540c\u4e00\u4ed3\u5e93\uff0c\u8fd9\u91cc\u6307\u5b58\u653e\u6240\u6709Jenkinsfile\u7684\u4ed3\u5e93)\r\n\r\n        DOCKER_REGISTER_CREDS = credentials('registry_xxx')\t//docker registry\u51ed\u8bc1\r\n        DOCKER_REGISTRY = 'xxxxx'\t//Docker\u4ed3\u5e93\u5730\u5740\r\n        DOCKER_NAMESPACE = 'xxxxx'\t//\u547d\u540d\u7a7a\u95f4\r\n        DOCKER_IMAGE = '${DOCKER_REGISTRY}/${DOCKER_NAMESPACE}/${CONTAINER_NAME}'\t//\u7ec4\u5408\u6210\u5b8c\u6574\u7684\u955c\u50cf\u540d\u79f0\r\n    }\r\n    stages {\r\n        stage('get timestamp') {\r\n            steps {\r\n                script {\r\n                    //\u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u6233\r\n                    def timestamp = sh(returnStdout: true, script: 'date +%Y%m%d%H%M%S').trim()\r\n                    //\u65f6\u95f4\u6233\u8d4b\u503c\r\n                    env.TIMESTAMP = timestamp\r\n                }\r\n            }\r\n        }\r\n        stage('fetch code') {\r\n            steps {\r\n                echo '----------Fetch code----------'\r\n                git branch: 'release', credentialsId: 'git-credentials-backend', url: PROJECT_GIT_URL\r\n            }\r\n        }\r\n        stage('fetch config') {\r\n            agent {\r\n                label 'node_xxx'\t//\u5728stage\u6b65\u9aa4\u4e2d\u53ef\u4ee5\u7a7f\u63d2\u5728\u5176\u4ed6agent\u7684\u64cd\u4f5c\u6b65\u9aa4\r\n            }\r\n            steps {\r\n                cleanWs() // \u6e05\u7406\u5de5\u4f5c\u76ee\u5f55\uff0c\u9632\u6b62\u5de5\u4f5c\u76ee\u5f55\u4ea7\u751f\u5176\u4ed6\u4ea7\u7269\r\n                dir('../jenkinsfile'){\r\n                    echo '----------Fetch config----------'\r\n                    git branch: 'master', credentialsId: 'git-credentials-backend', url: CONFIG_GIT_URL\r\n                }\r\n            }\r\n        }\r\n        stage('maven build'){\r\n            steps {\r\n                sh '/usr/local/maven3/bin/mvn -v'\r\n                sh '/usr/local/maven3/bin/mvn clean package -Dmaven.test.skip=true -U'\r\n            }\r\n        }\r\n        stage('docker build'){\r\n            steps {\r\n                sh '''\r\n                    echo '\u5f53\u524d\u65f6\u95f4\u4e3a: ${env.TIMESTAMP}'\r\n                    docker build -f ./Dockerfile -t ${DOCKER_IMAGE}:${env.TIMESTAMP} .\r\n                '''\r\n            }\r\n        }\r\n        stage('image push'){\r\n            steps {\r\n                sh '''\r\n                    docker login -u ${DOCKER_REGISTER_CREDS_USR} -p=${DOCKER_REGISTER_CREDS_PSW} ${DOCKER_REGISTRY}\r\n                    docker push ${DOCKER_IMAGE}:${env.TIMESTAMP}\r\n                    docker rmi ${DOCKER_IMAGE}:${env.TIMESTAMP}\r\n                '''\r\n            }\r\n        }\r\n        stage('publish cn on k8s'){\r\n            agent {\r\n                label 'node_XXX'\r\n            }\r\n            steps {\r\n                script {\r\n                    // \u8fd0\u884ckubectl\u547d\u4ee4\uff0c\u68c0\u67e5\u65e7\u7248\u672c\u662f\u5426\u5b58\u5728\u4e8e\u96c6\u7fa4\u4e2d\r\n                    def deploymentsName = 'bash -c 'kubectl get deployments -n ${K8S_NAMESPACE} ${CONTAINER_NAME} --output=jsonpath={.metadata.name}; exit 0;''\r\n                    def result = sh(returnStdout: true, script: deploymentsName).trim()\r\n                    echo '\u5373\u5c06\u6267\u884c\u7684\u670d\u52a1: ${result}'\r\n\r\n                    if (result=='${CONTAINER_NAME}') {\r\n                        // \u65e7\u7248\u672c\u5df2\u5b58\u5728\u4e8e\u96c6\u7fa4\u4e2d\uff0c\u6267\u884ckubectl set image\u66f4\u65b0\u955c\u50cf\r\n                        echo '\u6267\u884c\u955c\u50cf\u6eda\u52a8\u66f4\u65b0\uff01'\r\n                        sh '''\r\n                            kubectl set image -n ${K8S_NAMESPACE} deployment/${CONTAINER_NAME} ${CONTAINER_NAME}=${DOCKER_IMAGE}:${env.TIMESTAMP} --record\r\n                        '''\r\n                    } else {\r\n                        // \u65e7\u7248\u672c\u4e0d\u5b58\u5728\u4e8e\u96c6\u7fa4\u4e2d\uff0c\u5148\u6267\u884ckubectl apply\u90e8\u7f72\r\n                        echo '\u670d\u52a1\u4e0d\u5b58\u5728\u96c6\u7fa4\u4e2d\uff0c\u6267\u884c\u9996\u6b21\u90e8\u7f72!'\r\n                        sh '''\r\n                            kubectl apply -f ../jenkinsfile/${PUB_ENV}/${K8S_NAMESPACE}/${YAML_NAME}\r\n                            kubectl set image -n ${K8S_NAMESPACE} deployment/${CONTAINER_NAME} ${CONTAINER_NAME}=${DOCKER_IMAGE}:${env.TIMESTAMP} --record\r\n                        '''\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        stage('Check Pod Status') {\r\n            agent {\r\n                label 'node_xxx'\r\n            }\r\n            steps {\r\n                script {\r\n                    def namespace = env.K8S_NAMESPACE\r\n                    def containerName = env.CONTAINER_NAME\r\n                    def timeoutSeconds = 120\r\n\r\n                    //\u7b49\u5f85\u6eda\u52a8\u66f4\u65b0\u5b8c\u6210\r\n                    sh 'kubectl rollout status deployment -n ${namespace} ${CONTAINER_NAME} --timeout=${timeoutSeconds}s'\r\n                    sh 'sleep 5s'\r\n                    // \u83b7\u53d6Pod\u540d\u79f0\r\n                    def podName = sh(\r\n                        script: 'kubectl get pods -l app=${containerName} -n ${namespace} -o jsonpath='{.items[0].metadata.name}'',\r\n                        returnStdout: true\r\n                    ).trim()\r\n\r\n                    // \u68c0\u67e5\u5bb9\u5668\u72b6\u6001\r\n                    def containerReady = sh(\r\n                        script: 'kubectl get pods ${podName} -n ${namespace} -o jsonpath='{.status.containerStatuses[0].ready}'',\r\n                        returnStdout: true\r\n                    ).trim()\r\n\r\n                    if (containerReady == 'true') {\r\n                        echo 'Container ${containerName} in Pod ${podName} is ready. ContainerIsReady:${containerReady}'\r\n                    } else {\r\n                        error 'Container ${containerName} in Pod ${podName} is not ready. ContainerIsReady:${containerReady}'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n### 2.2 \u955c\u50cf\u53d1\u5e03\u5230K8S\r\n\r\n*\u89c1 2.1\u4e2d `publish cn on k8s`\u6b65\u9aa4*\r\n\r\n### 2.3 \u6eda\u52a8\u66f4\u65b0/\u66f4\u65b0\u540e\u68c0\u6d4b\r\n\r\n*\u89c1 2.1 \u4e2d `Check Pod Status` \u6b65\u9aa4*\u3002", "top": 1, "createdAt": 1719071949, "style": "", "script": "", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-06-22", "dateLabelColor": "#bc4c00"}}, "singeListJson": {"P14": {"htmlDir": "docs/link.html", "labels": ["link"], "postTitle": "\u81ea\u5b58\u94fe\u63a5", "postUrl": "link.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/14", "commentNum": 0, "wordCount": 681, "description": "- [\u56fe\u5e8a](https://www.3mz.cloudns.ch)\r\n- [\u77ed\u94fe](https://surl.witter.top)\r\n- [\u76d1\u63a7](https://monit.witter.top)\r\n\r\n<span id='busuanzi'>:robot:\u611f\u8c22\u7b2c<span></span>\u5c0f\u4f19\u4f34\u7684<span></span>\u6b21\u8bbf\u95ee\u6b64\u9875\u9762\u3002", "top": 0, "createdAt": 1718951757, "style": "<style>#busuanzi_value_site_uv{color:red}#busuanzi_value_site_pv{color:red}</style>", "script": "<script>document.getElementById('user-content-busuanzi').id='busuanzi_container_site_uv';busuanzi=document.getElementById('busuanzi_container_site_uv');busuanzi.style.display='none';busuanzi.childNodes[1].id='busuanzi_value_site_uv';busuanzi.childNodes[3].id='busuanzi_value_site_pv';</script><script async src='//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js'></script>", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-06-21", "dateLabelColor": "#bc4c00"}, "P12": {"htmlDir": "docs/about.html", "labels": ["about"], "postTitle": "About", "postUrl": "about.html", "postSourceUrl": "https://github.com/ljwtorch/ljwtorch.github.io/issues/12", "commentNum": 0, "wordCount": 615, "description": "- \u4eba\u53ef\u4ee5\u6ca1\u6709\u50b2\u6c14\uff0c\u4f46\u4e0d\u80fd\u6ca1\u6709\u50b2\u9aa8\uff1b\r\n- \u5174\u8da3\u662f\u5b66\u4e60\u6700\u597d\u7684\u8001\u5e08\uff1b\r\n\r\n\r\n<span id='busuanzi'>:robot:\u611f\u8c22\u7b2c<span></span>\u5c0f\u4f19\u4f34\u7684<span></span>\u6b21\u8bbf\u95ee\u6b64\u9875\u9762\u3002", "top": 0, "createdAt": 1718894582, "style": "<style>#busuanzi_value_site_uv{color:red}#busuanzi_value_site_pv{color:red}</style>", "script": "<script>document.getElementById('user-content-busuanzi').id='busuanzi_container_site_uv';busuanzi=document.getElementById('busuanzi_container_site_uv');busuanzi.style.display='none';busuanzi.childNodes[1].id='busuanzi_value_site_uv';busuanzi.childNodes[3].id='busuanzi_value_site_pv';</script><script async src='//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js'></script>", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}}, "labelColorDict": {"about": "#C5DEF5", "bug": "#d73a4a", "CI/CD": "#7E9219", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "K8S": "#DC4D91", "link": "#D4C5F9", "Linux": "#EAD0F2", "question": "#d876e3", "wontfix": "#ffffff", "\u5927\u6570\u636e": "#497B40", "\u5bb9\u5668": "#A2719B", "\u65e5\u5fd7": "#561A0A", "\u7f51\u7edc": "#9AC9A2", "\u8bc1\u4e66": "#687BF6"}, "displayTitle": "V's Blog", "faviconUrl": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "ogImage": "https://img.witter.top/file/b037878209903b7d5bb17.jpg", "prevUrl": "disabled", "nextUrl": "disabled"}